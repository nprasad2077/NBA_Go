# import-data disabled
services:
  db-init:
    build: .
    command: ["/nba_go"]
    networks:
      - coolify-shared
      # - api_network
    restart: "no"

  api1:
    build: .
    networks:
      - coolify-shared
      # - api_network
    restart: always

  api2:
    build: .
    networks:
      - coolify-shared
      # - api_network
    restart: always

  api3:
    build: .
    networks:
      - coolify-shared
      # - api_network
    restart: always

  nginx:
    image: 'nginx:stable'
    volumes:
      - '/data/nba-go-config/nginx:/etc/nginx:ro'
    depends_on:
      - api1
      - api2
      - api3
    ports:
      # --- MODIFICATION ---
      # Map container port 8080 to a static HOST port 8081.
      - "8081:8080"
    networks:
      - coolify-shared
      # - api_network

  prometheus:
    image: 'prom/prometheus:latest'
    volumes:
      - '/data/nba-go-config/prometheus:/etc/prometheus'
      - 'prometheus_data:/prometheus'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      # --- MODIFICATION ---
      # Map container port 9090 to a static HOST port 9091.
      - "9091:9090"
    networks:
      - coolify-shared
      # - api_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      # --- MODIFICATION ---
      # Map container port 3000 to a static HOST port 3001.
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=testing
    volumes:
      - '/data/nba-go-config/grafana/provisioning:/etc/grafana/provisioning'
      - './grafana/dashboards:/var/lib/grafana/dashboards'
      - 'grafana_data:/var/lib/grafana'
    networks:
      - coolify-shared
      # - api_network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  # api_network:
  #   driver: bridge
  coolify-shared:
    name: coolify
    external: true